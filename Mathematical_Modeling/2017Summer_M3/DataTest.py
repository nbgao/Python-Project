import tushare as ts
import pandas as pd
import numpy as np
import scipy
from datetime import datetime
import seaborn as sns
import matplotlib.pyplot as plt
import warnings
import scipy.stats as scs
sns.set(color_codes=True,style='whitegrid')
warnings.filterwarnings('ignore')

haha = [ '600000',  '600001',  '600002',  '600003',  '600004',  '600005',  '600006',  '600007',  '600008',  '600009',  '600010',  '600011',  '600012',  '600013',  '600014',  '600015',  '600016',  '600017',  '600018',  '600019',  '600020',  '600021',  '600022',  '600023',  '600024',  '600025',  '600026',  '600027',  '600028',  '600029',  '600030',  '600031',  '600032',  '600033',  '600034',  '600035',  '600036',  '600037',  '600038',  '600039',  '600040',  '600041',  '600042',  '600043',  '600044',  '600045',  '600046',  '600047',  '600048',  '600049',  '600050',  '600051',  '600052',  '600053',  '600054',  '600055',  '600056',  '600057',  '600058',  '600059',  '600060',  '600061',  '600062',  '600063',  '600064',  '600065',  '600066',  '600067',  '600068',  '600069',  '600070',  '600071',  '600072',  '600073',  '600074',  '600075',  '600076',  '600077',  '600078',  '600079',  '600080',  '600081',  '600082',  '600083',  '600084',  '600085',  '600086',  '600087',  '600088',  '600089',  '600090',  '600091',
'600092',   '600093',  '600094',  '600095',  '600096',  '600097',  '600098',  '600099',  '600100',  '600101',  '600102',  '600103',  '600104',  '600105',  '600106',  '600107',  '600108',  '600109',  '600110',  '600111',  '600112',  '600113',  '600114',  '600115',  '600116',  '600117',  '600118',  '600119',  '600120',  '600121',  '600122',  '600123',  '600124',  '600125',  '600126',  '600127',  '600128',  '600129',  '600130',  '600131',  '600132',  '600133',  '600134',  '600135',  '600136',  '600137',  '600138',  '600139',  '600140',  '600141',  '600142',  '600143',  '600144',  '600145',  '600146',  '600147',  '600148',  '600149',  '600150',  '600151',  '600152',  '600153',  '600154',  '600155',  '600156',  '600157',  '600158',  '600159',  '600160',  '600161',  '600162',  '600163',  '600164',  '600165',  '600166',  '600167',  '600168',  '600169',  '600170',  '600171',  '600172',  '600173',  '600174',  '600175',  '600176',  '600177',  '600178',  '600179',  '600180',  '600181',  '600182',  '600183',  '600184',   '600185',     '600186',  '600187',  '600188',  '600189',  '600190',  '600191',  '600192',  '600193',  '600194',  '600195',  '600196',  '600197',  '600198',  '600199',  '600200',  '600201',  '600202',  '600203',  '600204',  '600205',  '600206',  '600207',  '600208',  '600209',  '600210',  '600211',  '600212',  '600213',  '600214',  '600215',  '600216',  '600217',  '600218',  '600219',  '600220',  '600221',  '600222',  '600223',  '600224',  '600225',  '600226',  '600227',  '600228',  '600229',  '600230',  '600231',  '600232',  '600233',  '600234',  '600235',  '600236',  '600237',  '600238',  '600239',  '600240',  '600241',  '600242',  '600243',  '600244',  '600245',  '600246',  '600247',  '600248',  '600249',  '600250',  '600251',  '600252',  '600253',  '600254',  '600255',  '600256',  '600257',  '600258',  '600259',  '600260',  '600261',  '600262',  '600263',  '600264',  '600265',  '600266',  '600267',  '600268',  '600269',  '600270',  '600271',  '600272',  '600273',  '600274',  '600275',  '600276',  '600277',    '600278',    '600279',  '600280',  '600281',  '600282',  '600283',  '600284',  '600285',  '600286',  '600287',  '600288',  '600289',  '600290',  '600291',  '600292',  '600293',  '600294',  '600295',  '600296',  '600297',  '600298',  '600299',  '600300',  '600301',  '600302',  '600303',  '600304',  '600305',  '600306',  '600307',  '600308',  '600309',  '600310',  '600311',  '600312',  '600313',  '600314',  '600315',  '600316',  '600317',  '600318',  '600319',  '600320',  '600321',  '600322',  '600323',  '600324',  '600325',  '600326',  '600327',  '600328',  '600329',  '600330',  '600331',  '600332',  '600333',  '600334',  '600335',  '600336',  '600337',  '600338',  '600339',  '600340',  '600341',  '600342',  '600343',  '600344',  '600345',  '600346',  '600347',  '600348',  '600349',  '600350',  '600351',  '600352',  '600353',  '600354',  '600355',  '600356',  '600357',  '600358',  '600359',  '600360',  '600361',  '600362',  '600363',  '600364',  '600365',  '600366',  '600367',  '600368',  '600369',  '600370',
'600371',   '600372',  '600373',  '600374',  '600375',  '600376',  '600377',  '600378',  '600379',  '600380',  '600381',  '600382',  '600383',  '600384',  '600385',  '600386',  '600387',  '600388',  '600389',  '600390',  '600391',  '600392',  '600393',  '600394',  '600395',  '600396',  '600397',  '600398',  '600399',  '600400',  '600401',  '600402',  '600403',  '600404',  '600405',  '600406',  '600407',  '600408',  '600409',  '600410',  '600411',  '600412',  '600413',  '600414',  '600415',  '600416',  '600417',  '600418',  '600419',  '600420',  '600421',  '600422',  '600423',  '600424',  '600425',  '600426',  '600427',  '600428',  '600429',  '600430',  '600431',  '600432',  '600433',  '600434',  '600435',  '600436',  '600437',  '600438',  '600439',  '600440',  '600441',  '600442',  '600443',  '600444',  '600445',  '600446',  '600447',  '600448',  '600449',  '600450',  '600451',  '600452',  '600453',  '600454',  '600455',  '600456',  '600457',  '600458',  '600459',  '600460',  '600461',  '600462',  '600463',   '600464',     '600465',  '600466',  '600467',  '600468',  '600469',  '600470',  '600471',  '600472',  '600473',  '600474',  '600475',  '600476',  '600477',  '600478',  '600479',  '600480',  '600481',  '600482',  '600483',  '600484',  '600485',  '600486',  '600487',  '600488',  '600489',  '600490',  '600491',  '600492',  '600493',  '600494',  '600495',  '600496',  '600497',  '600498',  '600499',  '600500'
 ]



df=ts.get_hist_data('600132',start='2016-12-1',end='2017-5-1')

price=df[u'close'][::-1]
price1=np.log(price)
price2=np.log(price.shift(1))

shuju =price1-price2
shuju= shuju.dropna()
print(shuju)
jiegou =[]
for i in range(len(shuju)):
   jiegou.append(shuju[i])
with sns.axes_style('darkgrid'): 
   plt.subplot(111)
   sns.distplot(jiegou, bins=50, kde=True, rug=False)

plt.show()

print(jiegou)
print(scs.kstest(jiegou,'norm'))
print(scs.normaltest(jiegou)[1])
print(scipy.stats.shapiro(jiegou))
